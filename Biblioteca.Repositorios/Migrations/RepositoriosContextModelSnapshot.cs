// <auto-generated />
using Biblioteca.Repositorios;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Biblioteca.Repositorios.Migrations
{
    [DbContext(typeof(RepositoriosContext))]
    partial class RepositoriosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("Biblioteca.Aplicacion.Entidades.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AñoPublicacion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantEjemplares")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Biblioteca.Aplicacion.Entidades.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Facultad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumCarnet")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Telefono")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Persona");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Biblioteca.Aplicacion.Entidades.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaDevolucion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaPrestamo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Idlibro")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Idpersona")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Idlibro");

                    b.HasIndex("Idpersona");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("Biblioteca.Aplicacion.Entidades.Docente", b =>
                {
                    b.HasBaseType("Biblioteca.Aplicacion.Entidades.Persona");

                    b.Property<int>("AñoInicio")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumMatricula")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Docente");
                });

            modelBuilder.Entity("Biblioteca.Aplicacion.Entidades.Estudiante", b =>
                {
                    b.HasBaseType("Biblioteca.Aplicacion.Entidades.Persona");

                    b.Property<string>("Carrera")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumAlumno")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Estudiante");
                });

            modelBuilder.Entity("Biblioteca.Aplicacion.Entidades.Prestamo", b =>
                {
                    b.HasOne("Biblioteca.Aplicacion.Entidades.Libro", "libro")
                        .WithMany("ListaPrestamo")
                        .HasForeignKey("Idlibro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Aplicacion.Entidades.Persona", "persona")
                        .WithMany("ListaPrestamos")
                        .HasForeignKey("Idpersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("libro");

                    b.Navigation("persona");
                });

            modelBuilder.Entity("Biblioteca.Aplicacion.Entidades.Libro", b =>
                {
                    b.Navigation("ListaPrestamo");
                });

            modelBuilder.Entity("Biblioteca.Aplicacion.Entidades.Persona", b =>
                {
                    b.Navigation("ListaPrestamos");
                });
#pragma warning restore 612, 618
        }
    }
}
